buildscript {
  repositories {
    mavenCentral()
    maven {
      name = 'fabricmc.net'
      url = 'https://maven.fabricmc.net'
    }
  }
  dependencies {
    classpath "net.fabricmc:fabric-loom:$loom"
  }
}

apply plugin: 'java-library'
apply plugin: 'fabric-loom'

archivesBaseName = rootProject.name
group = 'io.github.chloedawn'
version = mod
sourceCompatibility = JavaVersion.VERSION_1_8
minecraft.refmapName = 'mixins/fovlock/refmap.json'

sourceSets {
  api
  main {
    compileClasspath += sourceSets.api.runtimeClasspath
    runtimeClasspath += sourceSets.api.runtimeClasspath
  }
}

jar {
  from sourceSets.main.output
  from sourceSets.api.output
}

dependencies {
  minecraft "com.mojang:minecraft:$game"
  mappings "net.fabricmc:yarn:$game+$mappings"
  modImplementation "net.fabricmc:fabric-loader:$loader"
  modImplementation "net.fabricmc.fabric-api:fabric-resource-loader-v0:$resourceloader"
  include "net.fabricmc.fabric-api:fabric-resource-loader-v0:$resourceloader"
  implementation "org.checkerframework:checker-qual:$checkerqual"
  apiImplementation "org.checkerframework:checker-qual:$checkerqual"
}

processResources {
  from(sourceSets.main.resources.srcDirs) {
    expand version: version, refmap: minecraft.refmapName
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs += [
    '-Xlint:all',
    '-XprintRounds',
    '-XprintProcessorInfo',
    '-encoding', 'UTF-8',
    '-Xmaxerrs', Integer.MAX_VALUE,
    '-Xmaxwarns', Integer.MAX_VALUE
  ]
}
task javadocJar(type: Jar, dependsOn: javadoc) {
  archiveClassifier.set 'javadoc'
  from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
  archiveClassifier.set 'sources'
  from sourceSets.main.allJava
  from sourceSets.api.allJava
}

task apiJar(type: Jar) {
  archiveClassifier.set 'api'
  from sourceSets.api.output
}

task apiSourcesJar(type: Jar) {
  archiveClassifier.set 'api-sources'
  from sourceSets.api.allJava
}

artifacts {
  archives javadocJar
  archives sourcesJar
  archives apiJar
  archives apiSourcesJar
}
